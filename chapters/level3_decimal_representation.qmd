# Level 3: Binary and Decimal Representation via [0,1]

**Lila:** Acharya, what about the decimal representation of real numbers? We still don’t know exactly how it is constructed.

**Acharya Bhaskar:** A very good question, Lila! To understand decimal representations properly, it is helpful to first look at the binary representation of numbers.

**Lila:** Ah! I know that computers use binary numbers to represent data. But I’m curious—how can real numbers be expressed in binary? And does this have any connection with the Nested Interval Property?

**Acharya Bhaskar:** Excellent thought, Lila. Indeed, binary representation arises quite naturally if we repeatedly bisect the interval $[0,1]$. Let’s explore how this works.

##Binary representation

**Step 1:** First division
Take any real number $x \in [0,1]$. Divide $[0,1]$ into two halves:
$$
[0,\tfrac{1}{2}] \quad \text{and} \quad [\tfrac{1}{2}, 1].
$$

- If $x \in [0,\tfrac{1}{2})$, we set $a_1 = 0$.  
- If $x \in [\tfrac{1}{2},1]$, we set $a_1 = 1$.

So the first binary digit $a_1$ tells us whether $x$ lies in the left or right half.

---

**Step 2: Second division**
Now, take the half chosen in Step 1 and bisect it again.

- If $a_1=0$, then we split $[0,\tfrac{1}{2}]$ into $[0,\tfrac{1}{4}]$ and $[\tfrac{1}{4},\tfrac{1}{2}]$.  
- If $a_1=1$, then we split $[\tfrac{1}{2},1]$ into $[\tfrac{1}{2},\tfrac{3}{4}]$ and $[\tfrac{3}{4},1]$.

Depending on which subinterval contains $x$, we assign $a_2=0$ (left) or $a_2=1$ (right).

---

**Lila:** So $a_2$ refines the position of $x$ within the chosen half?

**Acharya Bhaskar:** Exactly. Continuing this process, at the $n$-th step we decide whether $x$ lies in the left or right subinterval, and record the digit $a_n$.

---

Step 3: Infinite process**
Thus we build a sequence of digits $a_1,a_2,a_3,\dots$ where each $a_i \in \{0,1\}$. These digits define the binary expansion:
$$
x = 0.a_1a_2a_3\ldots \quad \text{(in base 2)}.
$$

Formally,
$$
x = \sum_{n=1}^{\infty} \frac{a_n}{2^n}.
$$

---

**Lila:** Ah, so each digit corresponds to a left-or-right choice in successive subdivisions of $[0,1]$. That’s just like building a nested sequence of intervals!

**Acharya Bhaskar:** Well observed. In fact, the intersection of these nested intervals is exactly the single point $x$. The binary expansion records the entire path of choices.

---

## Step 4: Example
Take $x=\tfrac{5}{8}$.  
- First step: $x\in [\tfrac{1}{2},1]$, so $a_1=1$.  
- Second step: $x\in [\tfrac{1}{2},\tfrac{3}{4}]$, so $a_2=0$.  
- Third step: $x\in [\tfrac{5}{8},\tfrac{3}{4}]$, so $a_3=1$.  

Thus,
$$
x = 0.101_2 = \tfrac{1}{2} + 0 + \tfrac{1}{8} = \tfrac{5}{8}.
$$

---

**Lila:** That’s beautiful! Binary digits are nothing but a record of the successive bisections that trap the number.

**Acharya Bhaskar:** Exactly, and this construction shows how every $x \in [0,1]$ can be encoded as an infinite binary string. It connects the geometry of intervals with the arithmetic of expansions.

## Decimal Representation via [0,1]

**Lila:** Acharya, now that I understand binary representation, what about *decimal* representation of real numbers? How do we obtain that?

**Acharya Bhaskar:** Very good question, Lila. The idea is very similar to binary, except instead of dividing into two parts, we divide the interval $[0,1]$ into ten equal parts.

---

**First digit**

**Acharya Bhaskar:** Let $x \in [0,1]$. We divide $[0,1]$ into ten subintervals:
$$
\Big[0,\tfrac{1}{10}\Big], \Big[\tfrac{1}{10},\tfrac{2}{10}\Big], \dots, \Big[\tfrac{9}{10},1\Big].
$$

- If $x$ lies in the first interval, set $d_1=0$.  
- If $x$ lies in the second interval, set $d_1=1$.  
- And so on, up to $d_1=9$ if $x \in [\tfrac{9}{10},1]$.  

This $d_1$ is the *first decimal digit* after the point.

**Lila:** So $d_1$ tells us in which tenth of the interval $[0,1]$ the number $x$ lies.

---

**Second digit**

**Acharya Bhaskar:** Exactly. Now, take the subinterval chosen in Step 1 and divide it again into ten equal parts.  

The position of $x$ in this subdivision gives us $d_2$, the second decimal digit.

**Lila:** Just like in binary, but with ten instead of two!

---

**Infinite process**

**Acharya Bhaskar:** Yes. Continuing this process, we construct digits $d_1,d_2,d_3,\dots$ with $d_i \in \{0,1,2,\dots,9\}$.  

These digits define the decimal expansion:
$$
x = 0.d_1d_2d_3\ldots \quad \text{(in base 10)}.
$$

Formally,
$$
x = \sum_{n=1}^{\infty} \frac{d_n}{10^n}.
$$

---

### Example

**Lila:** Could we try $x=\tfrac{457}{1000}$?  

**Acharya Bhaskar:** Certainly.  

- First step: $x \in [0.4,0.5]$, so $d_1=4$.  
- Second step: within that interval, $x \in [0.45,0.46]$, so $d_2=5$.  
- Third step: then $x \in [0.457,0.458]$, so $d_3=7$.  

Thus,
$$
x = 0.457.
$$

---

### A subtlety: non-uniqueness

**Lila:** Acharya, are decimal representations always unique?

**Acharya Bhaskar:** A very sharp question, Lila. In fact, they are *not always unique*. For example,
$$
0.5000\ldots = 0.4999\ldots
$$
represent the same number.  

**Lila:** Oh, I see. So sometimes a terminating decimal has an alternative representation with repeating $9$s.

**Acharya Bhaskar:** Exactly. This happens whenever the decimal expansion ends. You may think of it as the final subinterval having two possible "addresses" — one ending in an infinite string of zeros, and the other in an infinite string of nines.

**Lila:** So aside from this special case, decimal representations are unique?

**Acharya Bhaskar:** Yes, apart from this subtlety, each real number in $[0,1]$ corresponds to exactly one infinite decimal expansion.

---

**Lila:** That clears it up! Decimal representation is really just like binary, except we use partitions into ten instead of two, with a small quirk about repeating $9$s.

**Acharya Bhaskar:** Exactly, Lila. And this connection between *interval subdivisions* and *digit expansions* is a powerful idea in real analysis.
